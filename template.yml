apiVersion: v1
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml --build build-config --provider=openshift
        -o template.yml
      kompose.version: 1.18.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: superset
    name: superset
  spec:
    ports:
    - name: "8088"
      port: 8088
      targetPort: 8088
    - name: "8081"
      port: 8081
      targetPort: 8081
    selector:
      io.kompose.service: superset
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml --build build-config --provider=openshift
        -o template.yml
      kompose.version: 1.18.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: superset-postgres
    name: superset-postgres
  spec:
    ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
    selector:
      io.kompose.service: superset-postgres
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml --build build-config --provider=openshift
        -o template.yml
      kompose.version: 1.18.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: superset-redis
    name: superset-redis
  spec:
    ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
    selector:
      io.kompose.service: superset-redis
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml --build build-config --provider=openshift
        -o template.yml
      kompose.version: 1.18.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: superset
    name: superset
  spec:
    replicas: 1
    selector:
      io.kompose.service: superset
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: superset
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: superset
          - name: POSTGRESQL_HOST
            value: superset-postgres
          - name: POSTGRESQL_PASSWORD
            value: superset_password
          - name: POSTGRESQL_USER
            value: superset_user
          - name: REDIS_HOST
            value: superset-redis
          - name: cmd
            value: superset-init
          - name: fab_email
            value: admin@example.com
          - name: fab_firstname
            value: admin
          - name: fab_lastname
            value: minda
          - name: fab_password
            value: password
          - name: fab_username
            value: admin
          image: 'esequeira/superset:2'
          name: superset
          ports:
          - containerPort: 8088
          - containerPort: 8081
          resources: {}
        restartPolicy: Always
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - superset
        from:
          kind: ImageStreamTag
          name: esequeira:2
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: superset
    name: superset
  spec: 
    dockerImageRepository: docker.io/esequeira/superset
    tags:
      -
        name: latest
        annotations: null
        from:
          kind: DockerImage
          name: 'docker.io/esequeira/superset:2'
        generation: 2
        importPolicy: {  }
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml --build build-config --provider=openshift
        -o template.yml
      kompose.version: 1.18.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: superset-postgres
    name: superset-postgres
  spec:
    replicas: 1
    selector:
      io.kompose.service: superset-postgres
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
              creationTimestamp: null
        labels:
          io.kompose.service: superset-postgres
      spec:
        containers:
        - env:
          - name: POSTGRESQL_DATABASE
            value: superset
          - name: POSTGRESQL_PASSWORD
            value: superset_password
          - name: POSTGRESQL_USER
            value: superset_user
          image: 'centos/postgresql-10-centos7:1'
          name: superset-postgres
          ports:
          - containerPort: 5432
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: spg-data
        restartPolicy: Always
        volumes:
        - name: spg-data
          persistentVolumeClaim:
            claimName: spg-data
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - superset-postgres
        from:
          kind: ImageStreamTag
          name: superset-postgres:1
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: superset-postgres
    name: superset-postgres
  spec: 
    dockerImageRepository: docker.io/centos/postgresql-10-centos7
    tags:
      -
        name: latest
        annotations: null
        from:
          kind: DockerImage
          name: 'docker.io/centos/postgresql-10-centos7:1'
        generation: 2
        importPolicy: {  }
  status:
    dockerImageRepository: " "
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: spg-data
    name: spg-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yml --build build-config --provider=openshift
        -o template.yml
      kompose.version: 1.18.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: superset-redis
    name: superset-redis
  spec:
    replicas: 1
    selector:
      io.kompose.service: superset-redis
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: superset-redis
      spec:
        containers:
        - image: 'centos/redis-32-centos7:3.2'
          name: superset-redis
          ports:
          - containerPort: 6379
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/redis/data
            name: sc-data
        restartPolicy: Always
        volumes:
        - name: sc-data
          persistentVolumeClaim:
            claimName: sc-data
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - superset-redis
        from:
          kind: ImageStreamTag
          name: superset-redis:3.2
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: superset-redis
    name: superset-redis
  spec: 
    dockerImageRepository: docker.io/centos/redis-32-centos7
    tags:
      - 
        name: latest
        annotations: null
        from:
          kind: DockerImage
          name: 'docker.io/centos/redis-32-centos7:1'
        generation: 2
        importPolicy: {  }
  status:
    dockerImageRepository: " "
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: sc-data
    name: sc-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
kind: Template
metadata:
  name: apache-superset-2
